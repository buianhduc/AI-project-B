*******************************************************************************
Welcome to Freckers referee version 2025.0.0.

Conduct a game of Freckers between 2 Agent classes.

Run `python -m referee --help` for additional usage information.
*******************************************************************************
* referee : all messages printed by referee/wrapper modules begin with *
* referee : (any other lines of output must be from your Agent class).
* referee : 
* referee ~ logging game output to 'log2.txt'
* referee ~ clearing existing log file 'log2.txt'
* referee : wrapping player 1 [agent:ABAgent] as RED...
* referee : wrapping player 2 [agent:ABAgentWithCacheV2] as BLUE...
* referee : running game server...
* referee : let the game begin!
* referee : player AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status: unknown
* referee : ) is initialising
* player1 ~ creating agent subprocess...
* player1 ~ subprocess 23034 started
* player1 ~ initialising class 'agent:ABAgent' on subprocess 23034
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* referee : player AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status: unknown
* referee : ) is initialising
* player2 ~ creating agent subprocess...
* player2 ~ subprocess 23035 started
* player2 ~ initialising class 'agent:ABAgentWithCacheV2' on subprocess 23035
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.068s  (just elapsed)       0.068s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 1) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.580s  (just elapsed)       1.649s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.580s  (just elapsed)       1.649s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-1, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R R R R R * 
* referee :                          . R * * * * * . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * * * * * . 
* referee :                          * B B B B B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       1.649s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.021s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.021s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 2) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.705s  (just elapsed)       2.727s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.705s  (just elapsed)       2.727s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-4, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R R R R R * 
* referee :                          . R * * * * * . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * * B * * . 
* referee :                          * B B B . B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       1.649s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       2.727s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       1.649s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 3) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.238s  (just elapsed)       2.887s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.238s  (just elapsed)       2.887s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-4, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R R . R R * 
* referee :                          . R * * R * * . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * * B * * . 
* referee :                          * B B B . B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       2.887s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       2.727s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       2.727s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 4) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.940s  (just elapsed)       4.667s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.940s  (just elapsed)       4.667s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-1, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R R . R R * 
* referee :                          . R * * R * * . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * * B * * . 
* referee :                          * . B B . B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       2.887s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       4.667s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       2.887s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 5) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.007s  (just elapsed)       3.894s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.007s  (just elapsed)       3.894s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-3, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R . . R R * 
* referee :                          . R * R R * * . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * * B * * . 
* referee :                          * . B B . B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       3.894s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       4.667s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       4.667s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 6) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.501s  (just elapsed)       7.168s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.501s  (just elapsed)       7.168s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-6, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R . . R R * 
* referee :                          . R * R R * * . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * * B * B . 
* referee :                          * . B B . B . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       3.895s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       7.168s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       3.895s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 7) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.728s  (just elapsed)       4.623s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.728s  (just elapsed)       4.623s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-6, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R . . R . * 
* referee :                          . R * R R * R . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * * B * B . 
* referee :                          * . B B . B . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       4.623s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       7.168s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       7.168s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 8) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.190s  (just elapsed)       9.358s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.190s  (just elapsed)       9.358s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-3, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R . . R . * 
* referee :                          . R * R R * R . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * B B * B . 
* referee :                          * . B . . B . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       4.623s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       9.358s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       4.623s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 9) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.322s  (just elapsed)       4.945s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.322s  (just elapsed)       4.945s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-2, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . . . . R . * 
* referee :                          . R R R R * R . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * B B * B . 
* referee :                          * . B . . B . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       4.945s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       9.358s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       9.358s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 10) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 5.699s  (just elapsed)      15.058s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 5.699s  (just elapsed)      15.058s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-2, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . . . . R . * 
* referee :                          . R R R R * R . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B B B B * B . 
* referee :                          * . . . . B . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       4.945s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      15.058s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       4.945s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 11) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.073s  (just elapsed)       5.018s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.073s  (just elapsed)       5.018s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * R R R R * R * 
* referee :                          * * * * * * * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B B B B * B . 
* referee :                          * . . . . B . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       5.018s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      15.058s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      15.058s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 12) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 2.550s  (just elapsed)      17.608s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.550s  (just elapsed)      17.608s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * R R R R * R * 
* referee :                          * * * * * * * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * * * * * * * * 
* referee :                          * B B B B * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       5.018s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      17.608s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       5.018s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 13) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  +10.070s  (just elapsed)      15.088s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  +10.070s  (just elapsed)      15.088s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-2, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * R . R R * R * 
* referee :                          * * R * * * * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * * * * * * * * 
* referee :                          * B B B B * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      15.088s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      17.608s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      17.608s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 14) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=6, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.689s  (just elapsed)      19.297s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.689s  (just elapsed)      19.297s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-2, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * R . R R * R * 
* referee :                          * * R * * * * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * * B * * * * * 
* referee :                          * B . B B * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      15.088s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      19.297s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      15.088s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 15) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=1, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 6.153s  (just elapsed)      21.241s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 6.153s  (just elapsed)      21.241s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-1, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * . . R R * R * 
* referee :                          * R R * * * * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * * B * * * * * 
* referee :                          * B . B B * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      21.241s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      19.297s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      19.297s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 16) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.512s  (just elapsed)      20.809s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.512s  (just elapsed)      20.809s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-1, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * . . R R * R * 
* referee :                          * R R * * * * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * B B * * * * * 
* referee :                          * . . B B * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      21.241s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      20.809s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      21.241s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 17) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=1, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 4.769s  (just elapsed)      26.010s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 4.769s  (just elapsed)      26.010s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-4, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * . . R . * R * 
* referee :                          * R R * R * * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * B B * * * * * 
* referee :                          * . . B B * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      26.010s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      20.809s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      20.809s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 18) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 7.311s  (just elapsed)      28.120s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 7.311s  (just elapsed)      28.120s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * . . R . * R * 
* referee :                          * R R * R * * * 
* referee :                          . . . . . . . . 
* referee :                          * * * * . . . . 
* referee :                          * B B * * * * * 
* referee :                          * * * B B * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      26.010s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      28.120s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      26.010s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 19) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=5), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 4.920s  (just elapsed)      30.931s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 4.920s  (just elapsed)      30.931s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-5, [[↘]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * . . R . * R * 
* referee :                          * R R * R * * R 
* referee :                          . . . . . . . . 
* referee :                          * * * * . . . . 
* referee :                          * B B * * * * * 
* referee :                          * * * B B * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=5), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      30.931s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=5), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      28.120s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      28.120s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 20) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=6, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>, <Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.039s  (just elapsed)      30.159s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.039s  (just elapsed)      30.159s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-4, [[←], [↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * . . R . * R * 
* referee :                          * R R * R * * R 
* referee :                          . . . . . . . . 
* referee :                          * * B * . . . . 
* referee :                          * B B * * * * * 
* referee :                          * * * B . * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>, <Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      30.931s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>, <Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      30.159s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      30.931s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 21) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 2.501s  (just elapsed)      33.432s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.501s  (just elapsed)      33.432s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * R * * R * 
* referee :                          * R R * R * * R 
* referee :                          * * * * * * * * 
* referee :                          * * B * . . . . 
* referee :                          * B B * * * * * 
* referee :                          * * * B . * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      33.432s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      30.159s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      30.159s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 22) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 3.398s  (just elapsed)      33.557s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 3.398s  (just elapsed)      33.557s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-3, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * R * * R * 
* referee :                          * R R * R * * R 
* referee :                          * * * * * * * * 
* referee :                          * * B * . . . . 
* referee :                          * B B B * * * * 
* referee :                          * * * . . * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      33.433s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      33.557s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      33.433s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 23) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=2, c=4), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  +11.178s  (just elapsed)      44.611s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  +11.178s  (just elapsed)      44.611s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-4, [[↙]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * R * * R * 
* referee :                          * R R * . * * R 
* referee :                          * * * R * * * * 
* referee :                          * * B * . . . . 
* referee :                          * B B B * * * * 
* referee :                          * * * . . * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=4), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      44.611s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=4), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      33.557s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      33.557s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 24) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=3), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>, <Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.368s  (just elapsed)      35.925s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.368s  (just elapsed)      35.925s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-3, [[↖], [↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * B * R * * R * 
* referee :                          * R R * . * * R 
* referee :                          * * * R * * * * 
* referee :                          * * B * . . . . 
* referee :                          * B B . * * * * 
* referee :                          * * * . . * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=3), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>, <Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      44.611s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=3), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>, <Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      35.925s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      44.611s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 25) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=2, c=1), _directions=[<Direction.Right: Vector2(r=0, c=1)>, <Direction.Down: Vector2(r=1, c=0)>, <Direction.DownLeft: Vector2(r=1, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 8.422s  (just elapsed)      53.033s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 8.422s  (just elapsed)      53.033s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-1, [[→], [↓], [↙]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * B * R * * R * 
* referee :                          * . R * . * * R 
* referee :                          * * * R * * * * 
* referee :                          * * B * . . . . 
* referee :                          * B B . * * * * 
* referee :                          * R * . . * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=1), _directions=[<Direction.Right: Vector2(r=0, c=1)>, <Direction.Down: Vector2(r=1, c=0)>, <Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      53.033s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=1), _directions=[<Direction.Right: Vector2(r=0, c=1)>, <Direction.Down: Vector2(r=1, c=0)>, <Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      35.925s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      35.925s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 26) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>, <Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.881s  (just elapsed)      38.806s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.881s  (just elapsed)      38.806s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-2, [[↑], [↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * B B R * * R * 
* referee :                          * . R * . * * R 
* referee :                          * * * R * * * * 
* referee :                          * * B * . . . . 
* referee :                          * B . . * * * * 
* referee :                          * R * . . * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>, <Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      53.033s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>, <Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      38.806s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      53.033s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 27) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=1, c=3), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 5.866s  (just elapsed)      58.899s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 5.866s  (just elapsed)      58.899s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-3, [[↙]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * B B . * * R * 
* referee :                          * . R * . * * R 
* referee :                          * R * R * * * * 
* referee :                          * * B * . . . . 
* referee :                          * B . . * * * * 
* referee :                          * R * . . * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=3), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      58.899s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=3), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      38.806s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      38.806s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 28) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=4, c=2), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>, <Direction.UpRight: Vector2(r=-1, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.759s  (just elapsed)      40.564s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.759s  (just elapsed)      40.564s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-2, [[↖], [↗]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * B * * * * * 
* referee :                          * B B . * * R * 
* referee :                          * . R * . * * R 
* referee :                          * R * R * * * * 
* referee :                          * * . * . . . . 
* referee :                          * B . . * * * * 
* referee :                          * R * . . * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=2), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>, <Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      58.899s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=2), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>, <Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      40.564s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      58.899s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 29) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=2, c=2), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>, <Direction.DownRight: Vector2(r=1, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 4.766s  (just elapsed)      63.665s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 4.766s  (just elapsed)      63.665s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-2, [[↙], [↘]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * B * * * * * 
* referee :                          * B B . * * R * 
* referee :                          * . . * . * * R 
* referee :                          * R * R * * * * 
* referee :                          * * . * . . . . 
* referee :                          * B . . * * * * 
* referee :                          * R R . . * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=2), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>, <Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      63.665s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=2), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>, <Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      40.564s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      40.564s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 30) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.411s  (just elapsed)      42.975s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.411s  (just elapsed)      42.975s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-2, [[↖]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B * * * * * 
* referee :                          * B . . * * R * 
* referee :                          * . . * . * * R 
* referee :                          * R * R * * * * 
* referee :                          * * . * . . . . 
* referee :                          * B . . * * * * 
* referee :                          * R R . . * B * 
* referee :                          * * * * * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      63.665s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      42.975s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      63.665s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 31) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=6, c=2), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 2.285s  (just elapsed)      65.950s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.285s  (just elapsed)      65.950s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-2, [[↘]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B * * * * * 
* referee :                          * B . . * * R * 
* referee :                          * . . * . * * R 
* referee :                          * R * R * * * * 
* referee :                          * * . * . . . . 
* referee :                          * B . . * * * * 
* referee :                          * R . . . * B * 
* referee :                          * * * R * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=2), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      65.950s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=2), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      42.975s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      42.975s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 32) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=1, c=1), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.829s  (just elapsed)      45.804s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.829s  (just elapsed)      45.804s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-1, [[↖]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B B * * * * * 
* referee :                          * . . . * * R * 
* referee :                          * . . * . * * R 
* referee :                          * R * R * * * * 
* referee :                          * * . * . . . . 
* referee :                          * B . . * * * * 
* referee :                          * R . . . * B * 
* referee :                          * * * R * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=1), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      65.950s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=1), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      45.804s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      65.950s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 33) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=2, c=7), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.685s  (just elapsed)      67.635s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.685s  (just elapsed)      67.635s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-7, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B B * * * * * 
* referee :                          * . . . * * R * 
* referee :                          * . . * . * * . 
* referee :                          * R * R * * * R 
* referee :                          * * . * . . . . 
* referee :                          * B . . * * * * 
* referee :                          * R . . . * B * 
* referee :                          * * * R * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=7), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      67.635s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=7), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      45.804s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      45.804s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 34) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 4.453s  (just elapsed)      50.257s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 4.453s  (just elapsed)      50.257s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B B * * * * * 
* referee :                          * * * * * * R * 
* referee :                          * . . * . * * . 
* referee :                          * R * R * * * R 
* referee :                          * * * * . . . . 
* referee :                          * B * . * * * * 
* referee :                          * R * . * * B * 
* referee :                          * * * R * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      67.635s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      50.257s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      67.635s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 35) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=3, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.781s  (just elapsed)      69.416s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.781s  (just elapsed)      69.416s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-1, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B B * * * * * 
* referee :                          * * * * * * R * 
* referee :                          * . . * . * * . 
* referee :                          * . * R * * * R 
* referee :                          * R * * . . . . 
* referee :                          * B * . * * * * 
* referee :                          * R * . * * B * 
* referee :                          * * * R * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      69.417s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      50.257s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      50.257s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 36) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 4.689s  (just elapsed)      54.946s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 4.689s  (just elapsed)      54.946s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-2, [[→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B . B * * * * 
* referee :                          * * * * * * R * 
* referee :                          * . . * . * * . 
* referee :                          * . * R * * * R 
* referee :                          * R * * . . . . 
* referee :                          * B * . * * * * 
* referee :                          * R * . * * B * 
* referee :                          * * * R * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      69.417s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      54.946s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      69.417s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 37) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=4, c=1), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.601s  (just elapsed)      71.018s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.601s  (just elapsed)      71.018s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-1, [[↙]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B . B * * * * 
* referee :                          * * * * * * R * 
* referee :                          * . . * . * * . 
* referee :                          * . * R * * * R 
* referee :                          * . * * . . . . 
* referee :                          R B * . * * * * 
* referee :                          * R * . * * B * 
* referee :                          * * * R * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=4, c=1), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      71.018s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=4, c=1), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      54.946s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      54.946s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 38) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 4.642s  (just elapsed)      59.589s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 4.642s  (just elapsed)      59.589s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B * B * * * * 
* referee :                          * * * * * * R * 
* referee :                          * . . * . * * . 
* referee :                          * . * R * * * R 
* referee :                          * * * * . . . . 
* referee :                          R B * . * * * * 
* referee :                          * R * . * * B * 
* referee :                          * * * R * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      71.018s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      59.589s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      71.018s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 39) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=5, c=0), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 2.813s  (just elapsed)      73.831s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.813s  (just elapsed)      73.831s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-0, [[↘]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B * B * * * * 
* referee :                          * * * * * * R * 
* referee :                          * . . * . * * . 
* referee :                          * . * R * * * R 
* referee :                          * * * * . . . . 
* referee :                          . B * . * * * * 
* referee :                          * R * . * * B * 
* referee :                          * * R R * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=0), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      73.831s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=0), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      59.589s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      59.589s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 40) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.895s  (just elapsed)      62.484s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.895s  (just elapsed)      62.484s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-1, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B * B * * * * 
* referee :                          * * * * * * R * 
* referee :                          * . . * . * * . 
* referee :                          * . * R * * * R 
* referee :                          * B * * . . . . 
* referee :                          . . * . * * * * 
* referee :                          * R * . * * B * 
* referee :                          * * R R * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      73.831s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      62.484s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      73.831s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 41) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.413s  (just elapsed)      75.244s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.413s  (just elapsed)      75.244s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-1, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B * B * * * * 
* referee :                          * * * * * * R * 
* referee :                          * . . * . * * . 
* referee :                          * . * R * * * R 
* referee :                          * B * * . . . . 
* referee :                          . . * . * * * * 
* referee :                          * . * . * * B * 
* referee :                          * R R R * B * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      75.244s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      62.484s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      62.484s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 42) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=5), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 4.059s  (just elapsed)      66.543s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 4.059s  (just elapsed)      66.543s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-5, [[↗]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B * B * * * * 
* referee :                          * * * * * * R * 
* referee :                          * . . * . * * . 
* referee :                          * . * R * * * R 
* referee :                          * B * * . . . . 
* referee :                          . . * . * * * B 
* referee :                          * . * . * * B * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=5), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      75.244s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=5), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      66.543s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      75.244s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 43) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=3, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.771s  (just elapsed)      76.015s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.771s  (just elapsed)      76.015s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-3, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B * B * * * * 
* referee :                          * * * * * * R * 
* referee :                          * . . * . * * . 
* referee :                          * . * . * * * R 
* referee :                          * B * R . . . . 
* referee :                          . . * . * * * B 
* referee :                          * . * . * * B * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      76.015s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      66.543s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      66.543s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 44) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=6, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.649s  (just elapsed)      68.192s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.649s  (just elapsed)      68.192s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-6, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B * B * * * * 
* referee :                          * * * * * * R * 
* referee :                          * . . * . * * . 
* referee :                          * . * . * * * R 
* referee :                          * B * R . . . . 
* referee :                          . . * . * * B B 
* referee :                          * . * . * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      76.015s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      68.192s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      76.015s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 45) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=4, c=3), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.556s  (just elapsed)      76.571s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.556s  (just elapsed)      76.571s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-3, [[↙]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B * B * * * * 
* referee :                          * * * * * * R * 
* referee :                          * . . * . * * . 
* referee :                          * . * . * * * R 
* referee :                          * B * . . . . . 
* referee :                          . . R . * * B B 
* referee :                          * . * . * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=4, c=3), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      76.571s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=4, c=3), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      68.193s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      68.193s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 46) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=4, c=1), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.381s  (just elapsed)      70.574s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.381s  (just elapsed)      70.574s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-1, [[↖]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B * B * * * * 
* referee :                          * * * * * * R * 
* referee :                          * . . * . * * . 
* referee :                          B . * . * * * R 
* referee :                          * . * . . . . . 
* referee :                          . . R . * * B B 
* referee :                          * . * . * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=1), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      76.571s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=1), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      70.574s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      76.571s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 47) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=1, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.373s  (just elapsed)      76.944s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.373s  (just elapsed)      76.944s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-6, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B * B * * * * 
* referee :                          * * * * * * . * 
* referee :                          * . . * . * R . 
* referee :                          B . * . * * * R 
* referee :                          * . * . . . . . 
* referee :                          . . R . * * B B 
* referee :                          * . * . * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      76.944s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      70.574s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      70.574s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 48) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=3, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.399s  (just elapsed)      72.973s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.399s  (just elapsed)      72.973s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-0, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B * B * * * * 
* referee :                          * * * * * * . * 
* referee :                          B . . * . * R . 
* referee :                          . . * . * * * R 
* referee :                          * . * . . . . . 
* referee :                          . . R . * * B B 
* referee :                          * . * . * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=3, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      76.944s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=3, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      72.973s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      76.944s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 49) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=2, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.362s  (just elapsed)      77.307s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.362s  (just elapsed)      77.307s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-6, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B B * B * * * * 
* referee :                          * * * * * * . * 
* referee :                          B . . * . * . . 
* referee :                          . . * . * * R R 
* referee :                          * . * . . . . . 
* referee :                          . . R . * * B B 
* referee :                          * . * . * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      77.307s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      72.973s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      72.973s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 50) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=0), _directions=[<Direction.Right: Vector2(r=0, c=1)>, <Direction.Right: Vector2(r=0, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.091s  (just elapsed)      75.064s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.091s  (just elapsed)      75.064s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-0, [[→], [→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B B * * * 
* referee :                          * * * * * * . * 
* referee :                          B . . * . * . . 
* referee :                          . . * . * * R R 
* referee :                          * . * . . . . . 
* referee :                          . . R . * * B B 
* referee :                          * . * . * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=0), _directions=[<Direction.Right: Vector2(r=0, c=1)>, <Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      77.307s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=0), _directions=[<Direction.Right: Vector2(r=0, c=1)>, <Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      75.064s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      77.307s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 51) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=3, c=7), _directions=[<Direction.Left: Vector2(r=0, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.241s  (just elapsed)      77.548s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.241s  (just elapsed)      77.548s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-7, [[←]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B B * * * 
* referee :                          * * * * * * . * 
* referee :                          B . . * . * . . 
* referee :                          . . * . * R R . 
* referee :                          * . * . . . . . 
* referee :                          . . R . * * B B 
* referee :                          * . * . * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=7), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      77.548s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=7), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      75.064s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      75.064s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 52) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Right: Vector2(r=0, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.161s  (just elapsed)      77.225s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.161s  (just elapsed)      77.225s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-4, [[→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B . B * * 
* referee :                          * * * * * * . * 
* referee :                          B . . * . * . . 
* referee :                          . . * . * R R . 
* referee :                          * . * . . . . . 
* referee :                          . . R . * * B B 
* referee :                          * . * . * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      77.548s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      77.225s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      77.548s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 53) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=3, c=6), _directions=[<Direction.Left: Vector2(r=0, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.182s  (just elapsed)      77.731s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.182s  (just elapsed)      77.731s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-6, [[←]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B . B * * 
* referee :                          * * * * * * . * 
* referee :                          B . . * . * . . 
* referee :                          . . * . R R . . 
* referee :                          * . * . . . . . 
* referee :                          . . R . * * B B 
* referee :                          * . * . * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=6), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      77.731s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=6), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      77.225s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      77.225s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 54) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=2, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.735s  (just elapsed)      78.960s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.735s  (just elapsed)      78.960s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-0, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B . B * * 
* referee :                          B * * * * * . * 
* referee :                          . . . * . * . . 
* referee :                          . . * . R R . . 
* referee :                          * . * . . . . . 
* referee :                          . . R . * * B B 
* referee :                          * . * . * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      77.731s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      78.960s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      77.731s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 55) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=5, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.073s  (just elapsed)      77.804s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.073s  (just elapsed)      77.804s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-2, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B . B * * 
* referee :                          B * * * * * . * 
* referee :                          . . . * . * . . 
* referee :                          . . * . R R . . 
* referee :                          * . * . . . . . 
* referee :                          . . . . * * B B 
* referee :                          * . R . * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      77.804s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      78.960s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      78.960s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 56) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=7), _directions=[<Direction.Left: Vector2(r=0, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.043s  (just elapsed)      81.003s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.043s  (just elapsed)      81.003s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-7, [[←]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B . B * * 
* referee :                          B * * * * * . * 
* referee :                          . . . * . * . . 
* referee :                          . . * . R R . . 
* referee :                          * . * . . . . . 
* referee :                          . . . . * B B . 
* referee :                          * . R . * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=7), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      77.804s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=7), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      81.003s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      77.804s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 57) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.054s  (just elapsed)      77.859s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.054s  (just elapsed)      77.859s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B . B * * 
* referee :                          B * * * * * . * 
* referee :                          . . . * * * * . 
* referee :                          . . * * R R * . 
* referee :                          * . * * * * * . 
* referee :                          . * * * * B B . 
* referee :                          * * R * * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      77.859s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      81.003s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      81.003s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 58) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.686s  (just elapsed)      82.689s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.686s  (just elapsed)      82.689s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-5, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B . B * * 
* referee :                          B * * * * * . * 
* referee :                          . . . * * * * . 
* referee :                          . . * * R R * . 
* referee :                          * . * * * B * . 
* referee :                          . * * * * . B . 
* referee :                          * * R * * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      77.859s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      82.689s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      77.859s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 59) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=3, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.594s  (just elapsed)      78.453s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.594s  (just elapsed)      78.453s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-4, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B . B * * 
* referee :                          B * * * * * . * 
* referee :                          . . . * * * * . 
* referee :                          . . * * . R * . 
* referee :                          * . * * R B * . 
* referee :                          . * * * * . B . 
* referee :                          * * R * * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      78.453s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      82.689s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.689s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 60) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=4, c=5), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.817s  (just elapsed)      84.507s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.817s  (just elapsed)      84.507s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-5, [[↗]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B . B * * 
* referee :                          B * * * * * . * 
* referee :                          . . . * * * * . 
* referee :                          . . * * . R B . 
* referee :                          * . * * R . * . 
* referee :                          . * * * * . B . 
* referee :                          * * R * * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=5), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      78.453s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=5), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      84.507s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      78.453s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 61) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=3, c=5), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.337s  (just elapsed)      78.790s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.337s  (just elapsed)      78.790s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-5, [[↙]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B . B * * 
* referee :                          B * * * * * . * 
* referee :                          . . . * * * * . 
* referee :                          . . * * . . B . 
* referee :                          * . * * R . * . 
* referee :                          . * * R * . B . 
* referee :                          * * R * * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=5), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      78.790s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=5), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      84.507s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      84.507s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 62) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.843s  (just elapsed)      87.350s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.843s  (just elapsed)      87.350s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-6, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B . B * * 
* referee :                          B * * * * * . * 
* referee :                          . . . * * * * . 
* referee :                          . . * * . . B . 
* referee :                          * . * * R . B . 
* referee :                          . * * R * . . . 
* referee :                          * * R * * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      78.790s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      87.350s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      78.790s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 63) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=4, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.316s  (just elapsed)      79.107s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.316s  (just elapsed)      79.107s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-4, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B . B * * 
* referee :                          B * * * * * . * 
* referee :                          . . . * * * * . 
* referee :                          . . * * . . B . 
* referee :                          * . * * . . B . 
* referee :                          . * * R R . . . 
* referee :                          * * R * * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=4, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      79.107s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=4, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      87.350s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      87.350s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 64) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=4, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 3.026s  (just elapsed)      90.376s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 3.026s  (just elapsed)      90.376s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-6, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B . B * * 
* referee :                          B * * * * * . * 
* referee :                          . . . * * * B . 
* referee :                          . . * * . . B . 
* referee :                          * . * * . . . . 
* referee :                          . * * R R . . . 
* referee :                          * * R * * * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      79.107s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      90.376s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      79.107s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 65) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=5, c=3), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.457s  (just elapsed)      79.564s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.457s  (just elapsed)      79.564s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-3, [[↘]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B . B * * 
* referee :                          B * * * * * . * 
* referee :                          . . . * * * B . 
* referee :                          . . * * . . B . 
* referee :                          * . * * . . . . 
* referee :                          . * * . R . . . 
* referee :                          * * R * R * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=3), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      79.564s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=3), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      90.376s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      90.376s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 66) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=2, c=6), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 3.596s  (just elapsed)      93.972s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 3.596s  (just elapsed)      93.972s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-6, [[↗]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B . B * * 
* referee :                          B * * * * * . B 
* referee :                          . . . * * * . . 
* referee :                          . . * * . . B . 
* referee :                          * . * * . . . . 
* referee :                          . * * . R . . . 
* referee :                          * * R * R * . * 
* referee :                          * R R R * . * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=6), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      79.564s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=6), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      93.972s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      79.564s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 67) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.339s  (just elapsed)      79.903s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.339s  (just elapsed)      79.903s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * B . B * * 
* referee :                          B * * * * * . B 
* referee :                          . . . * * * . . 
* referee :                          . . * * . . B . 
* referee :                          * . * * * * . . 
* referee :                          . * * * R * . . 
* referee :                          * * R * R * . * 
* referee :                          * R R R * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      79.903s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      93.972s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      93.972s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 68) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 3.557s  (just elapsed)      97.529s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 3.557s  (just elapsed)      97.529s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B * B * * 
* referee :                          B * * * * * * B 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * B * 
* referee :                          * . * * * * * * 
* referee :                          . * * * R * . . 
* referee :                          * * R * R * . * 
* referee :                          * R R R * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      79.903s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      97.529s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      79.903s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 69) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=5, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.019s  (just elapsed)      80.922s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.019s  (just elapsed)      80.922s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-4, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B * B * * 
* referee :                          B * * * * * * B 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * B * 
* referee :                          * . * * * * * * 
* referee :                          . * * * . * . . 
* referee :                          * * R * R * . * 
* referee :                          * R R R R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      80.922s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      97.529s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      97.529s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 70) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=3, c=6), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.456s  (just elapsed)      98.986s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.456s  (just elapsed)      98.986s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-6, [[↗]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B * B * * 
* referee :                          B * * * * * * B 
* referee :                          * * . * * * * B 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * . * . . 
* referee :                          * * R * R * . * 
* referee :                          * R R R R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=3, c=6), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      80.922s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=3, c=6), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      98.986s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      80.922s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 71) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.249s  (just elapsed)      81.171s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.249s  (just elapsed)      81.171s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B * B * * 
* referee :                          B * * * * * * B 
* referee :                          * * . * * * * B 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * R * . * 
* referee :                          * R R R R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      81.171s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      98.986s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      98.986s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 72) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=2, c=7), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.293s  (just elapsed)     100.279s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.293s  (just elapsed)     100.279s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-7, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B * B * B 
* referee :                          B * * * * * * B 
* referee :                          * * . * * * * . 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * R * . * 
* referee :                          * R R R R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=7), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      81.172s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=7), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     100.279s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      81.172s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 73) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.262s  (just elapsed)      81.433s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.262s  (just elapsed)      81.433s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B * B * B 
* referee :                          B * * * * * * B 
* referee :                          * * . * * * * . 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * R * . * 
* referee :                          * R R R R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      81.434s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     100.280s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     100.280s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 74) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 2.877s  (just elapsed)     103.157s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.877s  (just elapsed)     103.157s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B * B * B 
* referee :                          B * * * * * * B 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * R * . * 
* referee :                          * R R R R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      81.434s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     103.157s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      81.434s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 75) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.245s  (just elapsed)      81.679s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.245s  (just elapsed)      81.679s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B * B * B 
* referee :                          B * * * * * * B 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * R * . * 
* referee :                          * R R R R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      81.679s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     103.157s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     103.157s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 76) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=1, c=7), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.797s  (just elapsed)     105.954s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.797s  (just elapsed)     105.954s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-7, [[↖]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B * B B B 
* referee :                          B * * * * * * . 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * R * . * 
* referee :                          * R R R R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=7), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      81.679s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=7), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     105.954s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      81.679s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 77) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=6, c=4), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.200s  (just elapsed)      81.880s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.200s  (just elapsed)      81.880s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-4, [[↘]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B * B B B 
* referee :                          B * * * * * * . 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * . * . * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=4), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      81.880s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=4), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     105.954s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     105.954s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 78) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 1.466s  (just elapsed)     107.420s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.466s  (just elapsed)     107.420s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B * B B B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * . * . * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      81.880s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     107.420s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      81.880s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 79) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.075s  (just elapsed)      81.955s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.075s  (just elapsed)      81.955s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B * B B B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      81.956s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     107.420s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     107.420s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 80) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=6), _directions=[<Direction.Left: Vector2(r=0, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.277s  (just elapsed)     108.697s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.277s  (just elapsed)     108.697s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-6, [[←]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B . B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=6), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      81.956s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=6), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     108.697s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      81.956s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 81) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.050s  (just elapsed)      82.005s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.050s  (just elapsed)      82.005s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B . B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.006s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     108.697s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     108.697s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 82) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 1.018s  (just elapsed)     109.715s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.018s  (just elapsed)     109.715s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.006s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     109.715s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.006s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 83) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.096s  (just elapsed)      82.101s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.096s  (just elapsed)      82.101s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.102s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     109.715s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     109.715s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 84) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.359s  (just elapsed)     111.074s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.359s  (just elapsed)     111.074s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-4, [[←]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.102s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     111.074s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.102s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 85) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.044s  (just elapsed)      82.146s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.044s  (just elapsed)      82.146s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.146s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     111.074s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     111.074s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 86) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 1.293s  (just elapsed)     112.367s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.293s  (just elapsed)     112.367s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.146s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     112.367s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.146s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 87) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.077s  (just elapsed)      82.223s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.077s  (just elapsed)      82.223s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.224s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     112.368s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     112.368s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 88) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.340s  (just elapsed)     113.707s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.340s  (just elapsed)     113.707s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-2, [[→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B . B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.224s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     113.708s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.224s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 89) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.043s  (just elapsed)      82.267s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.043s  (just elapsed)      82.267s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B . B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.267s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     113.708s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     113.708s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 90) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 1.078s  (just elapsed)     114.785s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.078s  (just elapsed)     114.785s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.267s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     114.785s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.267s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 91) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.077s  (just elapsed)      82.344s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.077s  (just elapsed)      82.344s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.344s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     114.785s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     114.785s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 92) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.337s  (just elapsed)     116.122s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.337s  (just elapsed)     116.122s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-4, [[←]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.344s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     116.122s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.344s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 93) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.044s  (just elapsed)      82.389s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.044s  (just elapsed)      82.389s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.389s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     116.123s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     116.123s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 94) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 1.639s  (just elapsed)     117.762s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.639s  (just elapsed)     117.762s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.389s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     117.762s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.389s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 95) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.078s  (just elapsed)      82.467s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.078s  (just elapsed)      82.467s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.468s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     117.762s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     117.762s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 96) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.463s  (just elapsed)     119.226s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.463s  (just elapsed)     119.226s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-2, [[→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B . B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.468s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     119.226s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.468s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 97) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.043s  (just elapsed)      82.511s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.043s  (just elapsed)      82.511s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B . B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.511s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     119.226s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     119.226s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 98) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 1.109s  (just elapsed)     120.335s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.109s  (just elapsed)     120.335s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.511s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     120.335s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.511s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 99) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.076s  (just elapsed)      82.587s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.076s  (just elapsed)      82.587s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.588s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     120.335s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     120.335s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 100) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.349s  (just elapsed)     121.684s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.349s  (just elapsed)     121.684s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-4, [[←]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.588s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     121.684s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.588s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 101) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.043s  (just elapsed)      82.631s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.043s  (just elapsed)      82.631s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.631s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     121.684s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     121.684s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 102) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 1.647s  (just elapsed)     123.331s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.647s  (just elapsed)     123.331s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.631s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     123.331s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.631s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 103) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.077s  (just elapsed)      82.708s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.077s  (just elapsed)      82.708s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.708s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     123.331s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     123.331s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 104) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.444s  (just elapsed)     124.775s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.444s  (just elapsed)     124.775s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-2, [[→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B . B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.708s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     124.775s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.708s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 105) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.043s  (just elapsed)      82.751s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.043s  (just elapsed)      82.751s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B . B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.751s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     124.775s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     124.775s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 106) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 1.364s  (just elapsed)     126.140s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.364s  (just elapsed)     126.140s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.752s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     126.140s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.752s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 107) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.077s  (just elapsed)      82.829s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.077s  (just elapsed)      82.829s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.829s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     126.140s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     126.140s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 108) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.478s  (just elapsed)     127.618s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.478s  (just elapsed)     127.618s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-4, [[←]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.829s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     127.618s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.829s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 109) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.044s  (just elapsed)      82.873s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.044s  (just elapsed)      82.873s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.874s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     127.618s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     127.618s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 110) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 1.692s  (just elapsed)     129.311s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.692s  (just elapsed)     129.311s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.874s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     129.311s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.874s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 111) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.077s  (just elapsed)      82.951s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.077s  (just elapsed)      82.951s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.951s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     129.311s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     129.311s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 112) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.521s  (just elapsed)     130.832s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.521s  (just elapsed)     130.832s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-2, [[→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B . B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.951s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     130.832s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.951s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 113) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.043s  (just elapsed)      82.994s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.043s  (just elapsed)      82.994s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B . B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.994s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     130.832s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     130.832s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 114) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 1.579s  (just elapsed)     132.411s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.579s  (just elapsed)     132.411s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.994s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     132.411s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.994s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 115) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.076s  (just elapsed)      83.070s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.076s  (just elapsed)      83.070s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.070s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     132.411s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     132.411s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 116) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.479s  (just elapsed)     133.891s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.479s  (just elapsed)     133.891s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-4, [[←]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.071s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     133.891s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      83.071s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 117) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.044s  (just elapsed)      83.114s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.044s  (just elapsed)      83.114s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.114s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     133.891s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     133.891s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 118) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 1.835s  (just elapsed)     135.725s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.835s  (just elapsed)     135.725s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.114s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     135.725s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      83.114s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 119) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.078s  (just elapsed)      83.193s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.078s  (just elapsed)      83.193s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.193s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     135.726s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     135.726s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 120) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.516s  (just elapsed)     137.242s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.516s  (just elapsed)     137.242s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-2, [[→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B . B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.193s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     137.242s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      83.193s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 121) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.044s  (just elapsed)      83.237s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.044s  (just elapsed)      83.237s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B . B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.237s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     137.242s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     137.242s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 122) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 1.640s  (just elapsed)     138.883s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.640s  (just elapsed)     138.883s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.238s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     138.883s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      83.238s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 123) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.076s  (just elapsed)      83.313s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.076s  (just elapsed)      83.313s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.314s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     138.883s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     138.883s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 124) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.791s  (just elapsed)     140.674s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.791s  (just elapsed)     140.674s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-4, [[←]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.314s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     140.674s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      83.314s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 125) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.044s  (just elapsed)      83.357s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.044s  (just elapsed)      83.357s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.357s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     140.674s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     140.674s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 126) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 1.899s  (just elapsed)     142.573s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.899s  (just elapsed)     142.573s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.358s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     142.573s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      83.358s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 127) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.077s  (just elapsed)      83.434s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.077s  (just elapsed)      83.434s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.435s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     142.573s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     142.573s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 128) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.742s  (just elapsed)     144.316s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.742s  (just elapsed)     144.316s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-2, [[→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B . B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.435s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     144.316s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      83.435s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 129) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.043s  (just elapsed)      83.478s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.043s  (just elapsed)      83.478s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B . B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.478s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     144.316s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     144.316s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 130) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 1.733s  (just elapsed)     146.049s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.733s  (just elapsed)     146.049s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.478s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     146.049s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      83.478s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 131) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.078s  (just elapsed)      83.556s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.078s  (just elapsed)      83.556s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.556s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     146.049s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     146.049s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 132) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.174s  (just elapsed)     148.223s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.174s  (just elapsed)     148.223s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-4, [[←]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.556s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     148.223s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      83.556s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 133) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.043s  (just elapsed)      83.599s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.043s  (just elapsed)      83.599s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.600s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     148.223s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     148.223s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 134) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 2.041s  (just elapsed)     150.265s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.041s  (just elapsed)     150.265s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.600s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     150.265s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      83.600s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 135) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.078s  (just elapsed)      83.678s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.078s  (just elapsed)      83.678s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.678s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     150.265s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     150.265s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 136) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.628s  (just elapsed)     152.893s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.628s  (just elapsed)     152.893s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-2, [[→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B . B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.678s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     152.893s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      83.678s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 137) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.044s  (just elapsed)      83.722s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.044s  (just elapsed)      83.722s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B . B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.722s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     152.893s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     152.893s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 138) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 1.952s  (just elapsed)     154.845s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.952s  (just elapsed)     154.845s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.722s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     154.845s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      83.722s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 139) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.076s  (just elapsed)      83.798s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.076s  (just elapsed)      83.798s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.798s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     154.845s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     154.845s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 140) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.976s  (just elapsed)     157.821s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.976s  (just elapsed)     157.821s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-4, [[←]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.798s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     157.821s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      83.798s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 141) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.043s  (just elapsed)      83.842s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.043s  (just elapsed)      83.842s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.842s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     157.821s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     157.821s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 142) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 1.950s  (just elapsed)     159.771s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.950s  (just elapsed)     159.771s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.842s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     159.771s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      83.842s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 143) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.078s  (just elapsed)      83.920s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.078s  (just elapsed)      83.920s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.920s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     159.771s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     159.771s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 144) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 2.375s  (just elapsed)     162.146s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.375s  (just elapsed)     162.146s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-2, [[→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B . B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.921s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     162.146s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      83.921s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 145) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.045s  (just elapsed)      83.966s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.045s  (just elapsed)      83.966s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B . B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.966s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     162.146s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     162.146s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 146) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 0.420s  (just elapsed)     162.566s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.420s  (just elapsed)     162.566s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      83.966s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     162.566s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      83.966s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 147) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.076s  (just elapsed)      84.042s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.076s  (just elapsed)      84.042s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B * B B B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      84.042s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     162.566s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     162.566s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 148) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.123s  (just elapsed)     162.689s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.123s  (just elapsed)     162.689s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-4, [[←]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      84.042s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     162.690s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      84.042s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 149) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.003s  (just elapsed)      84.045s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgent]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.003s  (just elapsed)      84.045s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B . B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 23034 (stdin)
* player1 ~ waiting for reply from subprocess 23034 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      84.045s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)     162.690s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)     162.690s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 150) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 23035 (stdin)
* player2 ~ waiting for reply from subprocess 23035 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)     162.691s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)     162.691s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * B * B 
* referee :                          B * * * * * * * 
* referee :                          * * . * * * * * 
* referee :                          . . * * . * . * 
* referee :                          * . * * * * * * 
* referee :                          . * * * * * . . 
* referee :                          * * R * * * * * 
* referee :                          * R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player2 ~ gracefully ending subprocess 23035...
* player2 ~ agent process terminated
* player1 ~ gracefully ending subprocess 23034...
* player1 ~ agent process terminated
* referee : game ended in a draw
* referee @ result: draw
