*******************************************************************************
Welcome to Freckers referee version 2025.0.0.

Conduct a game of Freckers between 2 Agent classes.

Run `python -m referee --help` for additional usage information.
*******************************************************************************
* referee : all messages printed by referee/wrapper modules begin with *
* referee : (any other lines of output must be from your Agent class).
* referee : 
* referee ~ logging game output to 'log.txt'
* referee ~ clearing existing log file 'log.txt'
* referee : wrapping player 1 [agent:ABAgentWithCacheV2] as RED...
* referee : wrapping player 2 [agent:ABAgentWithCacheV2] as BLUE...
* referee : running game server...
* referee : let the game begin!
* referee : player AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status: unknown
* referee : ) is initialising
* player1 ~ creating agent subprocess...
* player1 ~ subprocess 55557 started
* player1 ~ initialising class 'agent:ABAgentWithCacheV2' on subprocess 55557
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* referee : player AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status: unknown
* referee : ) is initialising
* player2 ~ creating agent subprocess...
* player2 ~ subprocess 55558 started
* player2 ~ initialising class 'agent:ABAgentWithCacheV2' on subprocess 55558
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.038s  (just elapsed)       0.038s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 1) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.192s  (just elapsed)       1.230s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.192s  (just elapsed)       1.230s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-1, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R R R R R * 
* referee :                          . R * * * * * . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * * * * * . 
* referee :                          * B B B B B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       1.230s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.027s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.027s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 2) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.167s  (just elapsed)       1.193s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.167s  (just elapsed)       1.193s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-4, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R R R R R * 
* referee :                          . R * * * * * . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * * B * * . 
* referee :                          * B B B . B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       1.230s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       1.194s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       1.230s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 3) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.188s  (just elapsed)       2.418s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.188s  (just elapsed)       2.418s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-4, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R R . R R * 
* referee :                          . R * * R * * . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * * B * * . 
* referee :                          * B B B . B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       2.418s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       1.194s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       1.194s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 4) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.231s  (just elapsed)       2.425s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.231s  (just elapsed)       2.425s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-1, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R R . R R * 
* referee :                          . R * * R * * . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * * B * * . 
* referee :                          * . B B . B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       2.418s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       2.425s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       2.418s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 5) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.137s  (just elapsed)       3.555s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.137s  (just elapsed)       3.555s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-3, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R . . R R * 
* referee :                          . R * R R * * . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * * B * * . 
* referee :                          * . B B . B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       3.555s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       2.425s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       2.425s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 6) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.217s  (just elapsed)       3.641s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.217s  (just elapsed)       3.641s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-3, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R . . R R * 
* referee :                          . R * R R * * . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * B B * * . 
* referee :                          * . B . . B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       3.555s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       3.641s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       3.555s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 7) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.242s  (just elapsed)       4.797s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.242s  (just elapsed)       4.797s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-6, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R . . R . * 
* referee :                          . R * R R * R . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * B B * * . 
* referee :                          * . B . . B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       4.797s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       3.642s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       3.642s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 8) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.235s  (just elapsed)       4.877s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.235s  (just elapsed)       4.877s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-6, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R . . R . * 
* referee :                          . R * R R * R . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * B B * B . 
* referee :                          * . B . . B . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       4.797s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       4.877s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       4.797s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 9) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.216s  (just elapsed)       6.013s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.216s  (just elapsed)       6.013s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-2, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . . . . R . * 
* referee :                          . R R R R * R . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * B B * B . 
* referee :                          * . B . . B . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       6.013s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       4.877s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       4.877s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 10) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.218s  (just elapsed)       6.095s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.218s  (just elapsed)       6.095s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-2, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . . . . R . * 
* referee :                          . R R R R * R . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B B B B * B . 
* referee :                          * . . . . B . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       6.013s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       6.095s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       6.013s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 11) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=5), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.991s  (just elapsed)       7.003s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.991s  (just elapsed)       7.003s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-5, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . . . . . . * 
* referee :                          . R R R R R R . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B B B B * B . 
* referee :                          * . . . . B . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=5), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       7.004s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=5), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       6.095s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       6.095s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 12) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.659s  (just elapsed)       6.754s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.659s  (just elapsed)       6.754s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-5, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . . . . . . * 
* referee :                          . R R R R R R . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B B B B B B . 
* referee :                          * . . . . . . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       7.004s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       6.754s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       7.004s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 13) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.136s  (just elapsed)       7.140s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.136s  (just elapsed)       7.140s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * R R R R R R * 
* referee :                          * * * * * * * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B B B B B B . 
* referee :                          * . . . . . . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       7.140s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       6.754s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       6.754s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 14) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 0.508s  (just elapsed)       7.263s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.508s  (just elapsed)       7.263s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * R R R R R R * 
* referee :                          * * * * * * * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * * * * * * * * 
* referee :                          * B B B B B B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       7.140s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       7.263s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       7.140s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 15) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.285s  (just elapsed)       8.425s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.285s  (just elapsed)       8.425s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-2, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * R . R R R R * 
* referee :                          * * R * * * * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * * * * * * * * 
* referee :                          * B B B B B B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       8.425s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       7.263s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       7.263s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 16) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=6, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.303s  (just elapsed)       8.566s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.303s  (just elapsed)       8.566s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-2, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * R . R R R R * 
* referee :                          * * R * * * * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * * B * * * * * 
* referee :                          * B . B B B B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       8.425s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       8.566s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       8.425s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 17) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=1, c=5), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.300s  (just elapsed)       9.725s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.300s  (just elapsed)       9.725s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-5, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * R . R R . R * 
* referee :                          * * R * * R * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * * B * * * * * 
* referee :                          * B . B B B B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=5), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       9.725s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=5), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       8.566s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       8.566s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 18) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=6, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.293s  (just elapsed)       9.858s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.293s  (just elapsed)       9.858s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-5, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * R . R R . R * 
* referee :                          * * R * * R * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * * B * * B * * 
* referee :                          * B . B B . B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       9.725s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       9.858s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       9.725s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 19) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=1, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.300s  (just elapsed)      11.026s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.300s  (just elapsed)      11.026s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-1, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * . . R R . R * 
* referee :                          * R R * * R * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * * B * * B * * 
* referee :                          * B . B B . B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      11.026s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       9.859s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       9.859s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 20) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.281s  (just elapsed)      11.139s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.281s  (just elapsed)      11.139s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-1, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * . . R R . R * 
* referee :                          * R R * * R * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * B B * * B * * 
* referee :                          * . . B B . B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      11.026s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      11.139s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      11.026s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 21) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=1, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.308s  (just elapsed)      12.334s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.308s  (just elapsed)      12.334s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-4, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * . . R . . R * 
* referee :                          * R R * R R * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * B B * * B * * 
* referee :                          * . . B B . B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      12.334s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      11.140s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      11.140s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 22) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=6, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.316s  (just elapsed)      12.455s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.316s  (just elapsed)      12.455s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-4, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * . . R . . R * 
* referee :                          * R R * R R * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * B B * B B * * 
* referee :                          * . . B . . B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      12.334s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      12.455s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      12.334s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 23) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=1, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.285s  (just elapsed)      13.619s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.285s  (just elapsed)      13.619s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-6, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * . . R . . . * 
* referee :                          * R R * R R R * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * B B * B B * * 
* referee :                          * . . B . . B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      13.619s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      12.455s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      12.455s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 24) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=6, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.295s  (just elapsed)      13.751s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.295s  (just elapsed)      13.751s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-6, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * . . R . . . * 
* referee :                          * R R * R R R * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * B B * B B B * 
* referee :                          * . . B . . . * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      13.619s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      13.751s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      13.619s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 25) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=1, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.313s  (just elapsed)      14.932s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.313s  (just elapsed)      14.932s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-3, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * . . . . . . * 
* referee :                          * R R R R R R * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * B B * B B B * 
* referee :                          * . . B . . . * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      14.932s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      13.751s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      13.751s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 26) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.315s  (just elapsed)      15.066s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.315s  (just elapsed)      15.066s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-3, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * . . . . . . * 
* referee :                          * R R R R R R * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * B B B B B B * 
* referee :                          * . . . . . . * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      14.932s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      15.066s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      14.932s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 27) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.982s  (just elapsed)      15.914s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.982s  (just elapsed)      15.914s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * * * 
* referee :                          * R R R R R R * 
* referee :                          * * * * * * * * 
* referee :                          . . . . . . . . 
* referee :                          * B B B B B B * 
* referee :                          * . . . . . . * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      15.914s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      15.066s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      15.066s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 28) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 1.353s  (just elapsed)      16.419s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.353s  (just elapsed)      16.419s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * * * 
* referee :                          * R R R R R R * 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * * * 
* referee :                          * B B B B B B * 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      15.914s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      16.419s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      15.914s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 29) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=2, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.361s  (just elapsed)      17.275s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.361s  (just elapsed)      17.275s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-4, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * * * 
* referee :                          * R R R . R R * 
* referee :                          * * * * R * * * 
* referee :                          * * * * * * * * 
* referee :                          * B B B B B B * 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      17.275s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      16.419s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      16.419s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 30) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.380s  (just elapsed)      17.799s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.380s  (just elapsed)      17.799s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-5, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * * * 
* referee :                          * R R R . R R * 
* referee :                          * * * * R * * * 
* referee :                          * * * * * B * * 
* referee :                          * B B B B . B * 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      17.275s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      17.799s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      17.275s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 31) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=2, c=5), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>, <Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.409s  (just elapsed)      18.684s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.409s  (just elapsed)      18.684s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-5, [[↙], [↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * * * 
* referee :                          * R R R . . R * 
* referee :                          * * * * R * * * 
* referee :                          * * * * * B * * 
* referee :                          * B B B B . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=5), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>, <Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      18.684s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=5), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>, <Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      17.799s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      17.799s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 32) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=4), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>, <Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.397s  (just elapsed)      19.196s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.397s  (just elapsed)      19.196s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-4, [[↗], [↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          * R R R . . R * 
* referee :                          * * * * R * * * 
* referee :                          * * * * * B * * 
* referee :                          * B B B . . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=4), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>, <Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      18.684s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=4), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>, <Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      19.196s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      18.684s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 33) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=2, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.401s  (just elapsed)      20.085s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.401s  (just elapsed)      20.085s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-1, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          * . R R . . R * 
* referee :                          * R * * R * * * 
* referee :                          * * * * * B * * 
* referee :                          * B B B . . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      20.085s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      19.196s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      19.196s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 34) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=1), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.428s  (just elapsed)      20.625s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.428s  (just elapsed)      20.625s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-1, [[↖]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          * . R R . . R * 
* referee :                          * R * * R * * * 
* referee :                          B * * * * B * * 
* referee :                          * . B B . . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=1), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      20.085s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=1), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      20.625s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      20.085s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 35) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=2, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.417s  (just elapsed)      21.502s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.417s  (just elapsed)      21.502s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-3, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          * . R . . . R * 
* referee :                          * R * R R * * * 
* referee :                          B * * * * B * * 
* referee :                          * . B B . . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      21.502s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      20.625s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      20.625s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 36) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=3), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.422s  (just elapsed)      22.047s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.422s  (just elapsed)      22.047s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-3, [[↗]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          * . R . . . R * 
* referee :                          * R * R R * * * 
* referee :                          B * * * B B * * 
* referee :                          * . B . . . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=3), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      21.502s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=3), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      22.047s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      21.502s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 37) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=3, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>, <Direction.Left: Vector2(r=0, c=-1)>, <Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.414s  (just elapsed)      22.916s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.414s  (just elapsed)      22.916s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-4, [[←], [←], [↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          * . R . . . R * 
* referee :                          * R * R . * * * 
* referee :                          B * * * B B * * 
* referee :                          R . B . . . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>, <Direction.Left: Vector2(r=0, c=-1)>, <Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      22.917s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>, <Direction.Left: Vector2(r=0, c=-1)>, <Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      22.047s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      22.047s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 38) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=4, c=4), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.415s  (just elapsed)      23.462s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.415s  (just elapsed)      23.462s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-4, [[↗]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          * . R . . . R * 
* referee :                          * R * R . B * * 
* referee :                          B * * * . B * * 
* referee :                          R . B . . . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=4), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      22.917s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=4), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      23.462s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      22.917s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 39) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=2, c=6), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.407s  (just elapsed)      24.324s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.407s  (just elapsed)      24.324s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-6, [[↘]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          * . R . . . . * 
* referee :                          * R * R . B * R 
* referee :                          B * * * . B * * 
* referee :                          R . B . . . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=6), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      24.324s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=6), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      23.463s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      23.463s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 40) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=4, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.407s  (just elapsed)      24.869s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.407s  (just elapsed)      24.869s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-0, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          * . R . . . . * 
* referee :                          B R * R . B * R 
* referee :                          . * * * . B * * 
* referee :                          R . B . . . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      24.324s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      24.870s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      24.324s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 41) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=3, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.444s  (just elapsed)      25.768s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.444s  (just elapsed)      25.768s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-1, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          * . R . . . . * 
* referee :                          B . * R . B * R 
* referee :                          . R * * . B * * 
* referee :                          R . B . . . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      25.768s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      24.870s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      24.870s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 42) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=3, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.421s  (just elapsed)      26.290s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.421s  (just elapsed)      26.290s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-0, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          B . R . . . . * 
* referee :                          . . * R . B * R 
* referee :                          . R * * . B * * 
* referee :                          R . B . . . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=3, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      25.768s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=3, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      26.290s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      25.768s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 43) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=3, c=7), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.424s  (just elapsed)      27.192s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.424s  (just elapsed)      27.192s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-7, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          B . R . . . . * 
* referee :                          . . * R . B * . 
* referee :                          . R * * . B * R 
* referee :                          R . B . . . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=7), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      27.192s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=7), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      26.291s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      26.291s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 44) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.441s  (just elapsed)      27.732s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.441s  (just elapsed)      27.732s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-6, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          B . R . . . . * 
* referee :                          . . * R . B * . 
* referee :                          . R * * . B B R 
* referee :                          R . B . . . . * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      27.192s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      27.732s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      27.192s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 45) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=3, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.451s  (just elapsed)      28.643s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.451s  (just elapsed)      28.643s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-3, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          B . R . . . . * 
* referee :                          . . * . . B * . 
* referee :                          . R * R . B B R 
* referee :                          R . B . . . . * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      28.643s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      27.732s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      27.732s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 46) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.452s  (just elapsed)      29.184s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.452s  (just elapsed)      29.184s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-2, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          B . R . . . . * 
* referee :                          . . * . . B * . 
* referee :                          . R B R . B B R 
* referee :                          R . . . . . . * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      28.643s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      29.184s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      28.643s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 47) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=5, c=0), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.446s  (just elapsed)      30.089s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.446s  (just elapsed)      30.089s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-0, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          B . R . . . . * 
* referee :                          . . * . . B * . 
* referee :                          . R B R . B B R 
* referee :                          . . . . . . . * 
* referee :                          R * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=0), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      30.089s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=0), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      29.184s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      29.184s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 48) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=4, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.457s  (just elapsed)      30.641s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.457s  (just elapsed)      30.641s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-6, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          B . R . . . . * 
* referee :                          . . * . . B B . 
* referee :                          . R B R . B . R 
* referee :                          . . . . . . . * 
* referee :                          R * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      30.090s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      30.641s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      30.090s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 49) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=2, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.450s  (just elapsed)      31.539s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.450s  (just elapsed)      31.539s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-2, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * B * 
* referee :                          B . . . . . . * 
* referee :                          . . R . . B B . 
* referee :                          . R B R . B . R 
* referee :                          . . . . . . . * 
* referee :                          R * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      31.540s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      30.641s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      30.641s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 50) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=4, c=5), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>, <Direction.UpLeft: Vector2(r=-1, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.466s  (just elapsed)      32.107s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.466s  (just elapsed)      32.107s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-5, [[↗], [↖]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * B * * 
* referee :                          * * * * * * B * 
* referee :                          B . . . . . . * 
* referee :                          . . R . . B B . 
* referee :                          . R B R . . . R 
* referee :                          . . . . . . . * 
* referee :                          R * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=5), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>, <Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      31.540s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=5), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>, <Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      32.107s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      31.540s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 51) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=6, c=0), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.445s  (just elapsed)      32.985s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.445s  (just elapsed)      32.985s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-0, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * B * * 
* referee :                          * * * * * * B * 
* referee :                          B . . . . . . * 
* referee :                          . . R . . B B . 
* referee :                          . R B R . . . R 
* referee :                          . . . . . . . * 
* referee :                          . * * R * * * * 
* referee :                          R * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=0), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      32.985s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=0), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      32.107s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      32.107s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 52) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=2, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.481s  (just elapsed)      33.588s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.481s  (just elapsed)      33.588s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-0, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * B * * 
* referee :                          B * * * * * B * 
* referee :                          . . . . . . . * 
* referee :                          . . R . . B B . 
* referee :                          . R B R . . . R 
* referee :                          . . . . . . . * 
* referee :                          . * * R * * * * 
* referee :                          R * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      32.985s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      33.588s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      32.985s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 53) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.439s  (just elapsed)      34.424s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.439s  (just elapsed)      34.424s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-3, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * B * * 
* referee :                          B * * * * * B * 
* referee :                          . . . . . . . * 
* referee :                          . . R . . B B . 
* referee :                          . R B R . . . R 
* referee :                          . . . . . . . * 
* referee :                          . * * . * * * * 
* referee :                          R * * R * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      34.424s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      33.588s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      33.588s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 54) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=3, c=6), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.497s  (just elapsed)      35.085s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.497s  (just elapsed)      35.085s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-6, [[↗]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * B * * 
* referee :                          B * * * * * B * 
* referee :                          . . . . . . . B 
* referee :                          . . R . . B . . 
* referee :                          . R B R . . . R 
* referee :                          . . . . . . . * 
* referee :                          . * * . * * * * 
* referee :                          R * * R * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=3, c=6), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      34.424s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=3, c=6), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      35.085s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      34.424s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 55) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=4, c=7), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.159s  (just elapsed)      35.584s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.159s  (just elapsed)      35.584s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-7, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * B * * 
* referee :                          B * * * * * B * 
* referee :                          . . . . . . . B 
* referee :                          . . R . . B . . 
* referee :                          . R B R . . . . 
* referee :                          . . . . . . . R 
* referee :                          . * * . * * * * 
* referee :                          R * * R * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=4, c=7), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      35.584s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=4, c=7), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      35.085s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      35.085s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 56) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=2, c=7), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.525s  (just elapsed)      36.610s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.525s  (just elapsed)      36.610s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-7, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * B * * 
* referee :                          B * * * * * B B 
* referee :                          . . . . . . . . 
* referee :                          . . R . . B . . 
* referee :                          . R B R . . . . 
* referee :                          . . . . . . . R 
* referee :                          . * * . * * * * 
* referee :                          R * * R * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=7), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      35.584s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=7), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      36.610s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      35.584s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 57) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=5, c=7), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.345s  (just elapsed)      36.929s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.345s  (just elapsed)      36.929s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-7, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * B * * 
* referee :                          B * * * * * B B 
* referee :                          . . . . . . . . 
* referee :                          . . R . . B . . 
* referee :                          . R B R . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * . * * * R 
* referee :                          R * * R * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=7), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      36.929s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=7), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      36.610s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      36.610s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 58) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=1, c=7), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.540s  (just elapsed)      38.150s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.540s  (just elapsed)      38.150s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-7, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * B * B 
* referee :                          B * * * * * B . 
* referee :                          . . . . . . . . 
* referee :                          . . R . . B . . 
* referee :                          . R B R . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * . * * * R 
* referee :                          R * * R * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=7), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      36.929s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=7), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      38.150s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      36.929s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 59) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=6, c=7), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.233s  (just elapsed)      38.161s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.233s  (just elapsed)      38.161s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-7, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * B * B 
* referee :                          B * * * * * B . 
* referee :                          . . . . . . . . 
* referee :                          . . R . . B . . 
* referee :                          . R B R . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * . * * * . 
* referee :                          R * * R * * * R 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=7), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      38.161s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=7), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      38.150s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      38.150s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 60) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=1, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.192s  (just elapsed)      39.342s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.192s  (just elapsed)      39.342s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-0, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B * * * * B * B 
* referee :                          . * * * * * B . 
* referee :                          . . . . . . . . 
* referee :                          . . R . . B . . 
* referee :                          . R B R . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * . * * * . 
* referee :                          R * * R * * * R 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      38.161s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=0), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      39.342s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      38.161s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 61) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=7, c=7), _directions=[<Direction.Left: Vector2(r=0, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.840s  (just elapsed)      39.001s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.840s  (just elapsed)      39.001s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-7, [[←]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B * * * * B * B 
* referee :                          . * * * * * B . 
* referee :                          . . . . . . . . 
* referee :                          . . R . . B . . 
* referee :                          . R B R . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * . * * * . 
* referee :                          R * * R * * R . 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=7, c=7), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      39.001s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=7, c=7), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      39.342s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      39.342s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 62) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=1, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.989s  (just elapsed)      40.332s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.989s  (just elapsed)      40.332s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-6, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B * * * * B B B 
* referee :                          . * * * * * . . 
* referee :                          . . . . . . . . 
* referee :                          . . R . . B . . 
* referee :                          . R B R . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * . * * * . 
* referee :                          R * * R * * R . 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      39.001s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      40.332s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      39.001s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 63) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=7, c=0), _directions=[<Direction.Right: Vector2(r=0, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.662s  (just elapsed)      39.663s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.662s  (just elapsed)      39.663s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-0, [[→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          B * * * * B B B 
* referee :                          . * * * * * . . 
* referee :                          . . . . . . . . 
* referee :                          . . R . . B . . 
* referee :                          . R B R . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * . * * * . 
* referee :                          . R * R * * R . 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=7, c=0), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      39.663s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=7, c=0), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      40.332s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      40.332s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 64) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=0), _directions=[<Direction.Right: Vector2(r=0, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.608s  (just elapsed)      40.940s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.608s  (just elapsed)      40.940s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-0, [[→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * * * B B B 
* referee :                          . * * * * * . . 
* referee :                          . . . . . . . . 
* referee :                          . . R . . B . . 
* referee :                          . R B R . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * . * * * . 
* referee :                          . R * R * * R . 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=0), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      39.663s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=0), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      40.940s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      39.663s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 65) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=7, c=1), _directions=[<Direction.Right: Vector2(r=0, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.639s  (just elapsed)      40.302s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.639s  (just elapsed)      40.302s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-1, [[→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B * * * B B B 
* referee :                          . * * * * * . . 
* referee :                          . . . . . . . . 
* referee :                          . . R . . B . . 
* referee :                          . R B R . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * . * * * . 
* referee :                          . . R R * * R . 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=7, c=1), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      40.303s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=7, c=1), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      40.940s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      40.940s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 66) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=1), _directions=[<Direction.Right: Vector2(r=0, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.551s  (just elapsed)      41.491s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.551s  (just elapsed)      41.491s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-1, [[→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . . B * * B B B 
* referee :                          . * * * * * . . 
* referee :                          . . . . . . . . 
* referee :                          . . R . . B . . 
* referee :                          . R B R . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * . * * * . 
* referee :                          . . R R * * R . 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=1), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      40.303s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=1), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      41.491s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      40.303s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 67) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=7, c=3), _directions=[<Direction.Right: Vector2(r=0, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.520s  (just elapsed)      40.822s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.520s  (just elapsed)      40.822s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-3, [[→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . . B * * B B B 
* referee :                          . * * * * * . . 
* referee :                          . . . . . . . . 
* referee :                          . . R . . B . . 
* referee :                          . R B R . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * . * * * . 
* referee :                          . . R . R * R . 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=7, c=3), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      40.823s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=7, c=3), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      41.491s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      41.491s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 68) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=6), _directions=[<Direction.Left: Vector2(r=0, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.479s  (just elapsed)      41.970s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.479s  (just elapsed)      41.970s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-6, [[←]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . . B * B B . B 
* referee :                          . * * * * * . . 
* referee :                          . . . . . . . . 
* referee :                          . . R . . B . . 
* referee :                          . R B R . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * . * * * . 
* referee :                          . . R . R * R . 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=6), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      40.823s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=6), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      41.970s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      40.823s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 69) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=7, c=4), _directions=[<Direction.Right: Vector2(r=0, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 0.392s  (just elapsed)      41.215s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.392s  (just elapsed)      41.215s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-4, [[→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . . B * B B . B 
* referee :                          . * * * * * . . 
* referee :                          . . . . . . . . 
* referee :                          . . R . . B . . 
* referee :                          . R B R . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * . * * * . 
* referee :                          . . R . . R R . 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=7, c=4), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      41.215s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=7, c=4), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      41.970s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      41.970s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 70) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.397s  (just elapsed)      42.368s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.397s  (just elapsed)      42.368s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-4, [[←]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . . B B . B . B 
* referee :                          . * * * * * . . 
* referee :                          . . . . . . . . 
* referee :                          . . R . . B . . 
* referee :                          . R B R . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * . * * * . 
* referee :                          . . R . . R R . 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      41.215s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Left: Vector2(r=0, c=-1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      42.368s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      41.215s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 71) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 0.145s  (just elapsed)      41.360s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.145s  (just elapsed)      41.360s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . . B B . B . B 
* referee :                          . * * * * * . . 
* referee :                          . * * * . . . . 
* referee :                          * * R * * B . . 
* referee :                          * R B R * . . . 
* referee :                          * * * * * . . . 
* referee :                          . * * * * * * * 
* referee :                          . * R * * R R * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      41.360s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      42.368s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      42.368s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 72) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=4, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.709s  (just elapsed)      44.077s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.709s  (just elapsed)      44.077s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-2, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . . B B . B . B 
* referee :                          . * * * * * . . 
* referee :                          . * B * . . . . 
* referee :                          * * R * * B . . 
* referee :                          * R . R * . . . 
* referee :                          * * * * * . . . 
* referee :                          . * * * * * * * 
* referee :                          . * R * * R R * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      41.360s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      44.077s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      41.360s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 73) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=3, c=2), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.777s  (just elapsed)      43.137s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.777s  (just elapsed)      43.137s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-2, [[↙]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . . B B . B . B 
* referee :                          . * * * * * . . 
* referee :                          . * B * . . . . 
* referee :                          * * . * * B . . 
* referee :                          * R . R * . . . 
* referee :                          R * * * * . . . 
* referee :                          . * * * * * * * 
* referee :                          . * R * * R R * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=2), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      43.137s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=2), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      44.077s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      44.077s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 74) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=2, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.564s  (just elapsed)      45.641s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.564s  (just elapsed)      45.641s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-2, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . . B B . B . B 
* referee :                          . * B * * * . . 
* referee :                          . * . * . . . . 
* referee :                          * * . * * B . . 
* referee :                          * R . R * . . . 
* referee :                          R * * * * . . . 
* referee :                          . * * * * * * * 
* referee :                          . * R * * R R * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      43.137s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      45.641s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      43.137s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 75) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=4, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.594s  (just elapsed)      44.731s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.594s  (just elapsed)      44.731s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-3, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . . B B . B . B 
* referee :                          . * B * * * . . 
* referee :                          . * . * . . . . 
* referee :                          * * . * * B . . 
* referee :                          * R . . * . . . 
* referee :                          R * * R * . . . 
* referee :                          . * * * * * * * 
* referee :                          . * R * * R R * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=4, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      44.731s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=4, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      45.641s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      45.641s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 76) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 0.895s  (just elapsed)      46.536s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.895s  (just elapsed)      46.536s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . * B B * B * B 
* referee :                          . * B * * * * * 
* referee :                          . * * * * * * . 
* referee :                          * * . * * B * . 
* referee :                          * R . . * * * . 
* referee :                          R * * R * . . . 
* referee :                          . * * * * * * * 
* referee :                          . * R * * R R * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      44.731s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      46.536s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      44.731s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 77) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=5, c=0), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.814s  (just elapsed)      46.545s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.814s  (just elapsed)      46.545s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-0, [[↘]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . * B B * B * B 
* referee :                          . * B * * * * * 
* referee :                          . * * * * * * . 
* referee :                          * * . * * B * . 
* referee :                          * R . . * * * . 
* referee :                          . * * R * . . . 
* referee :                          . R * * * * * * 
* referee :                          . * R * * R R * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=0), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      46.545s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=0), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      46.536s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      46.536s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 78) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.851s  (just elapsed)      48.388s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.851s  (just elapsed)      48.388s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-2, [[↖]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B B B * B * B 
* referee :                          . * . * * * * * 
* referee :                          . * * * * * * . 
* referee :                          * * . * * B * . 
* referee :                          * R . . * * * . 
* referee :                          . * * R * . . . 
* referee :                          . R * * * * * * 
* referee :                          . * R * * R R * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      46.545s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      48.388s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      46.545s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 79) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.828s  (just elapsed)      48.373s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.828s  (just elapsed)      48.373s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-1, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B B B * B * B 
* referee :                          . * . * * * * * 
* referee :                          . * * * * * * . 
* referee :                          * * . * * B * . 
* referee :                          * R . . * * * . 
* referee :                          . * * R * . . . 
* referee :                          . . * * * * * * 
* referee :                          . R R * * R R * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      48.373s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      48.388s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      48.388s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 80) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=3, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.849s  (just elapsed)      50.237s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.849s  (just elapsed)      50.237s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-5, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B B B * B * B 
* referee :                          . * . * * * * * 
* referee :                          . * * * * B * . 
* referee :                          * * . * * . * . 
* referee :                          * R . . * * * . 
* referee :                          . * * R * . . . 
* referee :                          . . * * * * * * 
* referee :                          . R R * * R R * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=3, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      48.373s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=3, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      50.237s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      48.373s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 81) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=5, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.889s  (just elapsed)      50.263s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.889s  (just elapsed)      50.263s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-3, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B B B * B * B 
* referee :                          . * . * * * * * 
* referee :                          . * * * * B * . 
* referee :                          * * . * * . * . 
* referee :                          * R . . * * * . 
* referee :                          . * * . * . . . 
* referee :                          . . * R * * * * 
* referee :                          . R R * * R R * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      50.263s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      50.237s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      50.237s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 82) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=2, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.850s  (just elapsed)      52.087s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.850s  (just elapsed)      52.087s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-5, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B B B * B * B 
* referee :                          . * . * * B * * 
* referee :                          . * * * * . * . 
* referee :                          * * . * * . * . 
* referee :                          * R . . * * * . 
* referee :                          . * * . * . . . 
* referee :                          . . * R * * * * 
* referee :                          . R R * * R R * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      50.263s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      52.087s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      50.263s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 83) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.929s  (just elapsed)      52.191s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.929s  (just elapsed)      52.191s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-3, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B B B * B * B 
* referee :                          . * . * * B * * 
* referee :                          . * * * * . * . 
* referee :                          * * . * * . * . 
* referee :                          * R . . * * * . 
* referee :                          . * * . * . . . 
* referee :                          . . * . * * * * 
* referee :                          . R R R * R R * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 55557 (stdin)
* player1 ~ waiting for reply from subprocess 55557 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      52.191s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)      52.088s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      52.088s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 84) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 55558 (stdin)
* player2 ~ waiting for reply from subprocess 55558 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=1, c=5), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 1.327s  (just elapsed)      53.415s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.327s  (just elapsed)      53.415s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-5, [[↖]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          . B B B B B * B 
* referee :                          . * . * * . * * 
* referee :                          . * * * * . * . 
* referee :                          * * . * * . * . 
* referee :                          * R . . * * * . 
* referee :                          . * * . * . . . 
* referee :                          . . * . * * * * 
* referee :                          . R R R * R R * 
* referee : 
* referee : ==================================================================
* referee : 
* player2 ~ gracefully ending subprocess 55558...
* player2 ~ agent process terminated
* player1 ~ gracefully ending subprocess 55557...
* player1 ~ agent process terminated
* referee : game over, winner is AgentProxyPlayer(
* referee :   name: player 2 [agent:ABAgentWithCacheV2]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.327s  (just elapsed)      53.415s  (game total)
* referee :   space: unknown (check platform)
* referee : )
* referee @ result: player 2 [agent:ABAgentWithCacheV2]
