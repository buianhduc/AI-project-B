*******************************************************************************
Welcome to Freckers referee version 2025.0.0.

Conduct a game of Freckers between 2 Agent classes.

Run `python -m referee --help` for additional usage information.
*******************************************************************************
* referee : all messages printed by referee/wrapper modules begin with *
* referee : (any other lines of output must be from your Agent class).
* referee : 
* referee ~ logging game output to 'log2.txt'
* referee ~ clearing existing log file 'log2.txt'
* referee : wrapping player 1 [agent:ABAgentWithCacheV2] as RED...
* referee : wrapping player 2 [agent:GreedyAgent] as BLUE...
* referee : running game server...
* referee : let the game begin!
* referee : player AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status: unknown
* referee : ) is initialising
* player1 ~ creating agent subprocess...
* player1 ~ subprocess 58890 started
* player1 ~ initialising class 'agent:ABAgentWithCacheV2' on subprocess 58890
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* referee : player AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status: unknown
* referee : ) is initialising
* player2 ~ creating agent subprocess...
* player2 ~ subprocess 58891 started
* player2 ~ initialising class 'agent:GreedyAgent' on subprocess 58891
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.028s  (just elapsed)       0.028s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 1) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 3.493s  (just elapsed)       3.522s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 3.493s  (just elapsed)       3.522s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-1, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R R R R R * 
* referee :                          . R * * * * * . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * * * * * . 
* referee :                          * B B B B B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       3.522s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.054s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.054s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 2) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.055s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.055s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-4, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R R R R R * 
* referee :                          . R * * * * * . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * * B * * . 
* referee :                          * B B B . B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       3.522s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.055s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       3.522s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 3) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 2.190s  (just elapsed)       5.712s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.190s  (just elapsed)       5.712s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-4, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R R . R R * 
* referee :                          . R * * R * * . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . * * * B * * . 
* referee :                          * B B B . B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       5.712s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.055s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.055s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 4) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.056s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.056s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-1, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R R . R R * 
* referee :                          . R * * R * * . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * * B * * . 
* referee :                          * . B B . B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       5.712s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.056s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       5.712s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 5) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.799s  (just elapsed)       7.511s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.799s  (just elapsed)       7.511s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-6, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R R . R . * 
* referee :                          . R * * R * R . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * * B * * . 
* referee :                          * . B B . B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       7.511s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.056s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.056s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 6) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.058s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.058s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-3, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R R . R . * 
* referee :                          . R * * R * R . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * B B * * . 
* referee :                          * . B . . B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)       7.511s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.058s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       7.511s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 7) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 2.748s  (just elapsed)      10.259s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.748s  (just elapsed)      10.259s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-3, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R . . R . * 
* referee :                          . R * R R * R . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * B B * * . 
* referee :                          * . B . . B B * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      10.259s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.058s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.058s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 8) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.059s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.059s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-6, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . R . . R . * 
* referee :                          . R * R R * R . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * B B * B . 
* referee :                          * . B . . B . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      10.259s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.059s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      10.259s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 9) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.591s  (just elapsed)      11.850s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.591s  (just elapsed)      11.850s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-2, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . . . . R . * 
* referee :                          . R R R R * R . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B * B B * B . 
* referee :                          * . B . . B . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      11.850s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.059s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.059s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 10) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.060s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.060s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-2, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * . . . . R . * 
* referee :                          . R R R R * R . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B B B B * B . 
* referee :                          * . . . . B . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      11.850s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.060s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      11.850s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 11) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 6.853s  (just elapsed)      18.703s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 6.853s  (just elapsed)      18.703s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * R R R R * R * 
* referee :                          * * * * * * * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B B B B * B . 
* referee :                          * . . . . B . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      18.703s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.060s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.060s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 12) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=7, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.061s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.061s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-5, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * R R R R * R * 
* referee :                          * * * * * * * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B B B B B B . 
* referee :                          * . . . . . . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      18.703s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=7, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.061s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      18.703s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 13) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.489s  (just elapsed)      20.192s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.489s  (just elapsed)      20.192s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-2, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * R . R R * R * 
* referee :                          * * R * * * * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          . B B B B B B . 
* referee :                          * . . . . . . * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      20.193s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.062s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.062s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 14) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.062s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.062s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * R . R R * R * 
* referee :                          * * R * * * * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * * * * * * * * 
* referee :                          * B B B B B B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      20.193s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.062s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      20.193s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 15) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=1, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 3.075s  (just elapsed)      23.268s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 3.075s  (just elapsed)      23.268s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-1, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * . . R R * R * 
* referee :                          * R R * * * * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * * * * * * * * 
* referee :                          * B B B B B B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      23.268s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.062s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.062s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 16) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=6, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.064s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.064s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-2, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * . . R R * R * 
* referee :                          * R R * * * * * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * * B * * * * * 
* referee :                          * B . B B B B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      23.268s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.064s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      23.268s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 17) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=1, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 3.253s  (just elapsed)      26.521s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 3.253s  (just elapsed)      26.521s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-6, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * . . R R * . * 
* referee :                          * R R * * * R * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * * B * * * * * 
* referee :                          * B . B B B B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      26.521s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.064s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.064s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 18) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=6, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.065s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.065s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-5, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * . . R R * . * 
* referee :                          * R R * * * R * 
* referee :                          . . . . . . . . 
* referee :                          . . . . . . . . 
* referee :                          * * B * * B * * 
* referee :                          * B . B B . B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      26.521s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.065s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      26.521s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 19) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 3.154s  (just elapsed)      29.674s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 3.154s  (just elapsed)      29.674s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * * * R R * * * 
* referee :                          * R R * * * R * 
* referee :                          * * * * . * * * 
* referee :                          . . . . . . . . 
* referee :                          * * B * * B * * 
* referee :                          * B . B B . B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      29.674s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.065s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.065s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 20) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.066s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.066s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-1, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * R * * 
* referee :                          * * * R R * * * 
* referee :                          * R R * * * R * 
* referee :                          * * * * . * * * 
* referee :                          . . . . . . . . 
* referee :                          * B B * * B * * 
* referee :                          * . . B B . B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      29.674s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.067s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      29.674s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 21) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=0, c=5), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.939s  (just elapsed)      31.614s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.939s  (just elapsed)      31.614s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(0-5, [[↙]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * R R * * * 
* referee :                          * R R R * * R * 
* referee :                          * * * * . * * * 
* referee :                          . . . . . . . . 
* referee :                          * B B * * B * * 
* referee :                          * . . B B . B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=5), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      31.614s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=0, c=5), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.067s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.067s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 22) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=6, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.068s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.068s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-4, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * R R * * * 
* referee :                          * R R R * * R * 
* referee :                          * * * * . * * * 
* referee :                          . . . . . . . . 
* referee :                          * B B * B B * * 
* referee :                          * . . B . . B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      31.614s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.068s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      31.614s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 23) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=1, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 3.995s  (just elapsed)      35.609s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 3.995s  (just elapsed)      35.609s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-4, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * R . * * * 
* referee :                          * R R R R * R * 
* referee :                          * * * * . * * * 
* referee :                          . . . . . . . . 
* referee :                          * B B * B B * * 
* referee :                          * . . B . . B * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      35.609s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=4), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.068s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.068s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 24) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=6, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.069s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.069s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-6, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * R . * * * 
* referee :                          * R R R R * R * 
* referee :                          * * * * . * * * 
* referee :                          . . . . . . . . 
* referee :                          * B B * B B B * 
* referee :                          * . . B . . . * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      35.609s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.069s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      35.609s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 25) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=2, c=4), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 4.238s  (just elapsed)      39.847s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 4.238s  (just elapsed)      39.847s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-4, [[↙]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * R . * * * 
* referee :                          * R R R . * R * 
* referee :                          * * * R . * * * 
* referee :                          . . . . . . . . 
* referee :                          * B B * B B B * 
* referee :                          * . . B . . . * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=4), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      39.847s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=4), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.069s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.069s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 26) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.070s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.070s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-3, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * R . * * * 
* referee :                          * R R R . * R * 
* referee :                          * * * R . * * * 
* referee :                          . . . . . . . . 
* referee :                          * B B B B B B * 
* referee :                          * . . . . . . * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      39.847s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.070s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      39.847s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 27) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=2, c=1), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 2.143s  (just elapsed)      41.990s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.143s  (just elapsed)      41.990s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-1, [[↘]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * R . * * * 
* referee :                          * . R R . * R * 
* referee :                          * * R R . * * * 
* referee :                          . . . . . . . . 
* referee :                          * B B B B B B * 
* referee :                          * . . . . . . * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=1), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      41.990s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=1), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.070s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.070s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 28) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ GrowAction()
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.071s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.071s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * R . * * * 
* referee :                          * . R R . * R * 
* referee :                          * * R R . * * * 
* referee :                          * * * * * * * * 
* referee :                          * B B B B B B * 
* referee :                          * * * * * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      41.990s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, GrowAction())'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.071s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      41.990s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 29) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=2, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>, <Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.694s  (just elapsed)      43.684s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.694s  (just elapsed)      43.684s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-3, [[↓], [↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * R . * * * 
* referee :                          * . R . . * R * 
* referee :                          * * R R . * * * 
* referee :                          * * * * * * * * 
* referee :                          * B B B B B B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>, <Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      43.685s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>, <Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.072s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.072s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 30) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.073s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.073s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-5, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * R . * * * 
* referee :                          * . R . . * R * 
* referee :                          * * R R . * * * 
* referee :                          * * * * * B * * 
* referee :                          * B B B B . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      43.685s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=5), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.073s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      43.685s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 31) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=2, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.719s  (just elapsed)      45.404s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.719s  (just elapsed)      45.404s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-6, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * R . * * * 
* referee :                          * . R . . * . * 
* referee :                          * * R R . * R * 
* referee :                          * * * * * B * * 
* referee :                          * B B B B . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      45.404s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=6), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.073s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.073s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 32) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=4, c=5), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.074s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.074s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-5, [[↗]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * R . * * * 
* referee :                          * . R . . * . B 
* referee :                          * * R R . * R * 
* referee :                          * * * * * . * * 
* referee :                          * B B B B . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=5), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      45.404s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=5), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.074s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      45.404s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 33) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=1, c=3), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.694s  (just elapsed)      47.098s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.694s  (just elapsed)      47.098s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-3, [[↙]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * . . * * * 
* referee :                          * . R . . * . B 
* referee :                          * R R R . * R * 
* referee :                          * * * * * . * * 
* referee :                          * B B B B . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=3), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      47.098s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=1, c=3), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.074s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.074s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 34) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=2, c=7), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.076s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.076s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-7, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * . . * * B 
* referee :                          * . R . . * . . 
* referee :                          * R R R . * R * 
* referee :                          * * * * * . * * 
* referee :                          * B B B B . B * 
* referee :                          * * * R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=7), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      47.098s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=7), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.076s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      47.098s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 35) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=2, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>, <Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.454s  (just elapsed)      48.552s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.454s  (just elapsed)      48.552s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-2, [[↓], [↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * . . * * B 
* referee :                          * . . . . * . . 
* referee :                          * R R R . * R * 
* referee :                          * * * * * . * * 
* referee :                          * B B B B . B * 
* referee :                          * * R R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>, <Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      48.552s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=2, c=2), _directions=[<Direction.Down: Vector2(r=1, c=0)>, <Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.076s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.076s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 36) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.077s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.077s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-4, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * . . * * B 
* referee :                          * . . . . * . . 
* referee :                          * R R R . * R * 
* referee :                          * * * * B . * * 
* referee :                          * B B B . . B * 
* referee :                          * * R R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      48.552s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=4), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.077s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      48.552s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 37) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=3, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 4.174s  (just elapsed)      52.726s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 4.174s  (just elapsed)      52.726s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-1, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * . . * * B 
* referee :                          * . . . . * . . 
* referee :                          * . R R . * R * 
* referee :                          * R * * B . * * 
* referee :                          * B B B . . B * 
* referee :                          * * R R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      52.726s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=1), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.077s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.077s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 38) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=3), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.078s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.078s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-3, [[↗]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * . . * * B 
* referee :                          * . . . . * . . 
* referee :                          * . R R . B R * 
* referee :                          * R * * B . * * 
* referee :                          * B B . . . B * 
* referee :                          * * R R * * * * 
* referee :                          * * * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=3), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      52.726s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=3), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.079s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      52.726s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 39) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=6, c=2), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 3.378s  (just elapsed)      56.105s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 3.378s  (just elapsed)      56.105s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-2, [[↙]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * . . * * B 
* referee :                          * . . . . * . . 
* referee :                          * . R R . B R * 
* referee :                          * R * * B . * * 
* referee :                          * B B . . . B * 
* referee :                          * * . R * * * * 
* referee :                          * R * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=2), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      56.105s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=2), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.079s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.079s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 40) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=2), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.080s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.080s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-2, [[↖]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * . . * * B 
* referee :                          * . . . . * . . 
* referee :                          B . R R . B R * 
* referee :                          * R * * B . * * 
* referee :                          * B . . . . B * 
* referee :                          * * . R * * * * 
* referee :                          * R * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=2), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      56.105s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=2), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.080s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      56.105s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 41) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 2.988s  (just elapsed)      59.092s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.988s  (just elapsed)      59.092s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * . . * * B 
* referee :                          * * * * * * * * 
* referee :                          B * R R * B R * 
* referee :                          * R * * B * * * 
* referee :                          * B * * * . B * 
* referee :                          * * * R * * * * 
* referee :                          * R * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      59.093s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.080s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.080s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 42) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=4, c=4), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.082s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.082s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-4, [[↖]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * . . * * B 
* referee :                          * * B * * * * * 
* referee :                          B * R R * B R * 
* referee :                          * R * * . * * * 
* referee :                          * B * * * . B * 
* referee :                          * * * R * * * * 
* referee :                          * R * * * * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=4), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      59.093s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=4), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.082s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      59.093s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 43) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=3, c=2), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>, <Direction.Right: Vector2(r=0, c=1)>, <Direction.DownRight: Vector2(r=1, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.708s  (just elapsed)      60.800s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.708s  (just elapsed)      60.800s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-2, [[↙], [→], [↘]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * . . * * B 
* referee :                          * * B * * * * * 
* referee :                          B * . R * B R * 
* referee :                          * R * * . * * * 
* referee :                          * B * * * . B * 
* referee :                          * * * R * * * * 
* referee :                          * R * * R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=2), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>, <Direction.Right: Vector2(r=0, c=1)>, <Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      60.800s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=2), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>, <Direction.Right: Vector2(r=0, c=1)>, <Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.082s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.082s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 44) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.083s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.083s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-1, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * . . * * B 
* referee :                          * * B * * * * * 
* referee :                          B B . R * B R * 
* referee :                          * R * * . * * * 
* referee :                          * . * * * . B * 
* referee :                          * * * R * * * * 
* referee :                          * R * * R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      60.800s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.083s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      60.800s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 45) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=3, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 4.554s  (just elapsed)      65.354s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 4.554s  (just elapsed)      65.354s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-3, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * . . * * B 
* referee :                          * * B * * * * * 
* referee :                          B B . . * B R * 
* referee :                          * R * R . * * * 
* referee :                          * . * * * . B * 
* referee :                          * * * R * * * * 
* referee :                          * R * * R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      65.354s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.083s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.083s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 46) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=3, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.085s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.085s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-1, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * . . * * B 
* referee :                          * B B * * * * * 
* referee :                          B . . . * B R * 
* referee :                          * R * R . * * * 
* referee :                          * . * * * . B * 
* referee :                          * * * R * * * * 
* referee :                          * R * * R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=3, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      65.354s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=3, c=1), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.085s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      65.354s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 47) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=3, c=6), _directions=[<Direction.Left: Vector2(r=0, c=-1)>, <Direction.DownLeft: Vector2(r=1, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.496s  (just elapsed)      66.850s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.496s  (just elapsed)      66.850s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-6, [[←], [↙]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * * . . * * B 
* referee :                          * B B * * * * * 
* referee :                          B . . . * B . * 
* referee :                          * R * R . * * * 
* referee :                          * . R * * . B * 
* referee :                          * * * R * * * * 
* referee :                          * R * * R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=6), _directions=[<Direction.Left: Vector2(r=0, c=-1)>, <Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      66.850s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=3, c=6), _directions=[<Direction.Left: Vector2(r=0, c=-1)>, <Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.085s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.085s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 48) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=3, c=0), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.086s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.086s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(3-0, [[↗]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * B . . * * B 
* referee :                          * B B * * * * * 
* referee :                          . . . . * B . * 
* referee :                          * R * R . * * * 
* referee :                          * . R * * . B * 
* referee :                          * * * R * * * * 
* referee :                          * R * * R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=3, c=0), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      66.850s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=3, c=0), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.086s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      66.850s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 49) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=4, c=3), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 3.008s  (just elapsed)      69.859s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 3.008s  (just elapsed)      69.859s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-3, [[↙]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * * * . * * 
* referee :                          * * B . . * * B 
* referee :                          * B B * * * * * 
* referee :                          . . . . * B . * 
* referee :                          * R * . . * * * 
* referee :                          * . R * * . B * 
* referee :                          * R * R * * * * 
* referee :                          * R * * R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=4, c=3), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      69.859s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=4, c=3), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.086s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.086s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 50) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=2, c=1), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.088s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.088s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-1, [[↗]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * B * . * * 
* referee :                          * * B . . * * B 
* referee :                          * . B * * * * * 
* referee :                          . . . . * B . * 
* referee :                          * R * . . * * * 
* referee :                          * . R * * . B * 
* referee :                          * R * R * * * * 
* referee :                          * R * * R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=1), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      69.859s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=1), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.088s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      69.859s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 51) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 4.214s  (just elapsed)      74.072s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 4.214s  (just elapsed)      74.072s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-3, [[↓]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * * B * . * * 
* referee :                          * * B . . * * B 
* referee :                          * . B * * * * * 
* referee :                          . . . . * B . * 
* referee :                          * R * . . * * * 
* referee :                          * . R * * . B * 
* referee :                          * R * . * * * * 
* referee :                          * R * R R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      74.073s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.Down: Vector2(r=1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.088s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.088s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 52) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=2, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.089s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.089s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-2, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * B B * . * * 
* referee :                          * * B . . * * B 
* referee :                          * . . * * * * * 
* referee :                          . . . . * B . * 
* referee :                          * R * . . * * * 
* referee :                          * . R * * . B * 
* referee :                          * R * . * * * * 
* referee :                          * R * R R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      74.073s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=2), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.089s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      74.073s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 53) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=4, c=1), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 3.429s  (just elapsed)      77.502s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 3.429s  (just elapsed)      77.502s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-1, [[↙]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * * B B * . * * 
* referee :                          * * B . . * * B 
* referee :                          * . . * * * * * 
* referee :                          . . . . * B . * 
* referee :                          * . * . . * * * 
* referee :                          R . R * * . B * 
* referee :                          * R * . * * * * 
* referee :                          * R * R R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=4, c=1), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      77.502s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=4, c=1), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.089s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.089s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 54) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.090s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.090s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-2, [[↖]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * . * * 
* referee :                          * * . . . * * B 
* referee :                          * . . * * * * * 
* referee :                          . . . . * B . * 
* referee :                          * . * . . * * * 
* referee :                          R . R * * . B * 
* referee :                          * R * . * * * * 
* referee :                          * R * R R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      77.502s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=2), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.090s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      77.502s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 55) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=5, c=0), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 2.966s  (just elapsed)      80.468s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.966s  (just elapsed)      80.468s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-0, [[↘]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * . * * 
* referee :                          * * . . . * * B 
* referee :                          * . . * * * * * 
* referee :                          . . . . * B . * 
* referee :                          * . * . . * * * 
* referee :                          . . R * * . B * 
* referee :                          * R * . * * * * 
* referee :                          * R R R R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=0), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      80.468s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=0), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.090s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.090s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 56) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=1, c=7), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.091s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.091s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-7, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * . * B 
* referee :                          * * . . . * * . 
* referee :                          * . . * * * * * 
* referee :                          . . . . * B . * 
* referee :                          * . * . . * * * 
* referee :                          . . R * * . B * 
* referee :                          * R * . * * * * 
* referee :                          * R R R R * * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=7), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      80.468s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=7), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.091s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      80.468s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 57) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=7, c=4), _directions=[<Direction.Right: Vector2(r=0, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 2.226s  (just elapsed)      82.694s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 2.226s  (just elapsed)      82.694s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(7-4, [[→]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * . * B 
* referee :                          * * . . . * * . 
* referee :                          * . . * * * * * 
* referee :                          . . . . * B . * 
* referee :                          * . * . . * * * 
* referee :                          . . R * * . B * 
* referee :                          * R * . * * * * 
* referee :                          * R R R . R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=7, c=4), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.694s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=7, c=4), _directions=[<Direction.Right: Vector2(r=0, c=1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.091s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.091s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 58) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=5, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.092s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.092s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-6, [[↑]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * . * B 
* referee :                          * * . . . * * . 
* referee :                          * . . * * * * * 
* referee :                          . . . . * B . * 
* referee :                          * . * . . * B * 
* referee :                          . . R * * . . * 
* referee :                          * R * . * * * * 
* referee :                          * R R R . R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      82.694s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=5, c=6), _directions=[<Direction.Up: Vector2(r=-1, c=0)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.092s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      82.694s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 59) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ GrowAction()
* player1 ~ resources usage status:
* player1 ~   time:  + 3.422s  (just elapsed)      86.116s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 3.422s  (just elapsed)      86.116s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action GROW
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * . * B 
* referee :                          * * . . . * * . 
* referee :                          * . . * * * * * 
* referee :                          . . . . * B . * 
* referee :                          * * * * . * B * 
* referee :                          * * R * * . . * 
* referee :                          * R * * * * * * 
* referee :                          * R R R * R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      86.116s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, GrowAction())'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.092s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.092s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 60) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=4, c=6), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.093s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.093s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(4-6, [[↖]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * . * B 
* referee :                          * * . . . * * . 
* referee :                          * . . * B * * * 
* referee :                          . . . . * B . * 
* referee :                          * * * * . * . * 
* referee :                          * * R * * . . * 
* referee :                          * R * * * * * * 
* referee :                          * R R R * R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=6), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      86.116s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=4, c=6), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.093s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      86.116s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 61) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.503s  (just elapsed)      87.618s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.503s  (just elapsed)      87.618s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-1, [[↙]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * . * B 
* referee :                          * * . . . * * . 
* referee :                          * . . * B * * * 
* referee :                          . . . . * B . * 
* referee :                          * * * * . * . * 
* referee :                          * * R * * . . * 
* referee :                          * . * * * * * * 
* referee :                          R R R R * R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      87.618s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=6, c=1), _directions=[<Direction.DownLeft: Vector2(r=1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.093s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.093s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 62) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=2, c=4), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.093s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.093s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(2-4, [[↗]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * . * B 
* referee :                          * * . . . B * . 
* referee :                          * . . * . * * * 
* referee :                          . . . . * B . * 
* referee :                          * * * * . * . * 
* referee :                          * * R * * . . * 
* referee :                          * . * * * * * * 
* referee :                          R R R R * R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=4), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      87.618s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=2, c=4), _directions=[<Direction.UpRight: Vector2(r=-1, c=1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.093s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      87.618s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 63) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=5, c=2), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 3.834s  (just elapsed)      91.452s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 3.834s  (just elapsed)      91.452s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(5-2, [[↘]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B * . * B 
* referee :                          * * . . . B * . 
* referee :                          * . . * . * * * 
* referee :                          . . . . * B . * 
* referee :                          * * * * . * . * 
* referee :                          * * . * * . . * 
* referee :                          * . * R * * * * 
* referee :                          R R R R * R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=2), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      91.452s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.RED: 0>, MoveAction(coord=Coord(r=5, c=2), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.094s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)       0.094s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 64) ...
* player2 ~ call 'action()'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ ⤷ MoveAction(coord=Coord(r=1, c=5), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>])
* player2 ~ resources usage status:
* player2 ~   time:  + 0.001s  (just elapsed)       0.094s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 2 [agent:GreedyAgent]
* referee :   color: BLUE
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.001s  (just elapsed)       0.094s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(1-5, [[↖]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B B . * B 
* referee :                          * * . . . . * . 
* referee :                          * . . * . * * * 
* referee :                          . . . . * B . * 
* referee :                          * * * * . * . * 
* referee :                          * * . * * . . * 
* referee :                          * . * R * * * * 
* referee :                          R R R R * R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player1 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=5), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ resources usage status:
* player1 ~   time:  + 0.000s  (just elapsed)      91.452s  (game total)
* player1 ~   space: unknown (check platform)
* player2 ~ call 'update(<PlayerColor.BLUE: 1>, MoveAction(coord=Coord(r=1, c=5), _directions=[<Direction.UpLeft: Vector2(r=-1, c=-1)>]))'...
* player2 ~ send method call request to subprocess 58891 (stdin)
* player2 ~ waiting for reply from subprocess 58891 (stdout)
* player2 ~ resources usage status:
* player2 ~   time:  + 0.000s  (just elapsed)       0.094s  (game total)
* player2 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 0.000s  (just elapsed)      91.452s  (game total)
* referee :   space: unknown (check platform)
* referee : ) to play (turn 65) ...
* player1 ~ call 'action()'...
* player1 ~ send method call request to subprocess 58890 (stdin)
* player1 ~ waiting for reply from subprocess 58890 (stdout)
* player1 ~ ⤷ MoveAction(coord=Coord(r=6, c=3), _directions=[<Direction.DownRight: Vector2(r=1, c=1)>])
* player1 ~ resources usage status:
* player1 ~   time:  + 1.329s  (just elapsed)      92.781s  (game total)
* player1 ~   space: unknown (check platform)
* referee : AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.329s  (just elapsed)      92.781s  (game total)
* referee :   space: unknown (check platform)
* referee : ) plays action MOVE(6-3, [[↘]])
* referee : 
* referee : =========================== game board ===========================
* referee : 
* referee :                          * B B B B . * B 
* referee :                          * * . . . . * . 
* referee :                          * . . * . * * * 
* referee :                          . . . . * B . * 
* referee :                          * * * * . * . * 
* referee :                          * * . * * . . * 
* referee :                          * . * . * * * * 
* referee :                          R R R R R R * * 
* referee : 
* referee : ==================================================================
* referee : 
* player2 ~ gracefully ending subprocess 58891...
* player2 ~ agent process terminated
* player1 ~ gracefully ending subprocess 58890...
* player1 ~ agent process terminated
* referee : game over, winner is AgentProxyPlayer(
* referee :   name: player 1 [agent:ABAgentWithCacheV2]
* referee :   color: RED
* referee :   resource limit tolerance: 1.0
* referee :   agent status: resources usage status:
* referee :   time:  + 1.329s  (just elapsed)      92.781s  (game total)
* referee :   space: unknown (check platform)
* referee : )
* referee @ result: player 1 [agent:ABAgentWithCacheV2]
